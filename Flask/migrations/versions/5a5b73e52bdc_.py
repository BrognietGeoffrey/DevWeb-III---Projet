"""empty message

Revision ID: 5a5b73e52bdc
Revises: 
Create Date: 2021-05-08 17:54:17.562567

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5a5b73e52bdc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('cId', sa.Integer(), nullable=False),
    sa.Column('cName', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('cId')
    )
    op.create_table('profils',
    sa.Column('pId', sa.Integer(), nullable=False),
    sa.Column('pName', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('pId')
    )
    op.create_table('tags',
    sa.Column('tId', sa.Integer(), nullable=False),
    sa.Column('tName', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('tId')
    )
    op.create_table('users',
    sa.Column('uId', sa.Integer(), nullable=False),
    sa.Column('uEmail', sa.String(length=100), nullable=False),
    sa.Column('uFirstName', sa.String(length=50), nullable=False),
    sa.Column('uLastname', sa.String(length=50), nullable=False),
    sa.Column('uPassword', sa.String(length=200), nullable=False),
    sa.Column('uCreated_on', sa.DateTime(), nullable=True),
    sa.Column('uLast_login', sa.DateTime(), nullable=True),
    sa.Column('isAuthenticated', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('uId'),
    sa.UniqueConstraint('uEmail'),
    sa.UniqueConstraint('uEmail')
    )
    op.create_table('notes',
    sa.Column('nId', sa.Integer(), nullable=False),
    sa.Column('nTitle', sa.String(length=50), nullable=False),
    sa.Column('nOwner', sa.Integer(), nullable=True),
    sa.Column('nDate_created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['nOwner'], ['users.uId'], ),
    sa.PrimaryKeyConstraint('nId')
    )
    op.create_table('userprofils',
    sa.Column('uId', sa.Integer(), nullable=False),
    sa.Column('pId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['pId'], ['profils.pId'], ),
    sa.ForeignKeyConstraint(['uId'], ['users.uId'], ),
    sa.PrimaryKeyConstraint('uId', 'pId')
    )
    op.create_table('notecategories',
    sa.Column('nId', sa.Integer(), nullable=False),
    sa.Column('cId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cId'], ['categories.cId'], ),
    sa.ForeignKeyConstraint(['nId'], ['notes.nId'], ),
    sa.PrimaryKeyConstraint('nId', 'cId')
    )
    op.create_table('notetags',
    sa.Column('nId', sa.Integer(), nullable=False),
    sa.Column('tId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['nId'], ['notes.nId'], ),
    sa.ForeignKeyConstraint(['tId'], ['tags.tId'], ),
    sa.PrimaryKeyConstraint('nId', 'tId')
    )
    op.create_table('noteusers',
    sa.Column('nId', sa.Integer(), nullable=False),
    sa.Column('uId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['nId'], ['notes.nId'], ),
    sa.ForeignKeyConstraint(['uId'], ['users.uId'], ),
    sa.PrimaryKeyConstraint('nId', 'uId')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('noteusers')
    op.drop_table('notetags')
    op.drop_table('notecategories')
    op.drop_table('userprofils')
    op.drop_table('notes')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('profils')
    op.drop_table('categories')
    # ### end Alembic commands ###
